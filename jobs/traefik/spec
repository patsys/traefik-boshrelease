---
name: traefik

description: This job runs a Traefik reverse-proxy.

templates:
  bin/traefik_ctl: bin/traefik_ctl
  bin/bpm-prestart: bin/bpm-prestart
  bpm.yml: config/bpm.yml
  conf/traefik.toml: conf/traefik.toml
  conf/rules.toml: conf/rules.toml
  tls/traefik-default.crt: tls/traefik-default.crt
  tls/traefik-default.key: tls/traefik-default.key
  tls/web-backend.crt: tls/web-backend.crt
  tls/web-backend.key: tls/web-backend.key
  tls/api-entrypoint.crt: tls/api-entrypoint.crt
  tls/api-entrypoint.key: tls/api-entrypoint.key

packages:
  - traefik

consumes:
- name: http_backend
  type: http-router
  optional: true

provides:
  - name: traefik
    type: traefik
    properties:
      - traefik.http.enabled
      - traefik.http.port
      - traefik.tls.enabled
      - traefik.tls.port
      - traefik.tls.cert
      - traefik.api.enabled
      - traefik.api.tls.port
      - traefik.api.tls.cert
      - traefik.api.digest_auth.username
      - traefik.api.digest_auth.password

properties:
  bpm.enabled:
    description: |
      Switch to BPM (Bosh Process Manager) for running Traefik. This brings
      the benefit of improved security measures at runtime.
    default: false

  traefik.debug:
    description: |
      Whether to enable debug mode.

      This mode should never be enabled in production because it exposes
      internal state of the Traefik server that malicious users should not
      have access to.

      This will install HTTP handlers to expose Go expvars under /debug/vars
      and pprof profiling data under /debug/pprof.

      The log level will be set to DEBUG unless 'log_level' is specified.
    default: false
  traefik.log_level:
    description: |
      The level of details in Traefik logs.

      Possible values are:
      - DEBUG (the most verbose level)
      - INFO
      - WARN
      - ERROR
      - FATAL
      - PANIC (the least verbose level)
    default: INFO
  traefik.access_logs.enabled:
    description: |
      Whether to activate the access logs. This will produce one line for each
      access to the Traefik server. This might generate high volume of data
      under high loads.
    default: true

  traefik.accept_invalid_backend_certificates:
    description: |
      Whether invalid SSL certificates are accepted for backends.

      This disables detection of man-in-the-middle attacks so should be used
      on trusted backend networks only.
    default: false


  traefik.http.enabled:
    description: |
      Whether to activate the HTTP entrypoint.
    default: true
  traefik.http.port:
    description: |
      TCP port for the HTTP entrypoint.

      When 'bpm.enabled' is 'false' and both this port and 'traefik.tls.port'
      (as well as 'traefik.api.tls.port' and the deprecated
      'traefik.web.port') are above 1024, then Traefik runs as 'vcap' instead
      of 'root'.
    default: 80
  traefik.http.redirect_to_https:
    description: |
      Whether the HTTP entrypoint redirects all web requests to the HTTPS
      entrypoint or not.
    default: true


  traefik.tls.enabled:
    description: |
      Whether to activate the HTTPS entrypoint.
    default: true
  traefik.tls.port:
    description: |
      TCP port for the HTTPS entrypoint.

      When 'bpm.enabled' is 'false' and both this port and 'traefik.http.port'
      (as well as 'traefik.api.tls.port' and the deprecated
      'traefik.web.port') are above 1024, then Traefik runs as 'vcap' instead
      of 'root'.
    default: 443
  traefik.tls.cert:
    type: certificate
    description: |
      The default TLS certificate to present on HTTPS entrypoint.
  traefik.tls.min_version:
    description: |
      The minimum TLS version to be used by the HTTPS entrypoint.
    default: VersionTLS12


  traefik.acme.enabled:
    description: |
      Whether to activate automatic Let's Encrypt certificates.
    default: false
  traefik.acme.certs_email:
    description: |
      Email address used for ACME certificate registration.

      This address will receive expiration notice emails before certificates
      will expire. Please note that Traefik automatically renew those
      certificates before they actually expire. So you usually need not take
      action uppon receiving expiration notice when running Traefik.
    example: acme-certs-contact@example.com
  traefik.acme.staging:
    description: |
      Run on the staging Let's Encrypt server.

      This is recommended for a first start because the Let's Encrypt
      production server enforces restrictive quotas that you can easily hit in
      case you have any configuration issue. That's why you first need to
      first validate your setup with the staging server before switching to
      the production server.
    default: true


  traefik.api.enabled:
    description: |
      Whether the Traefik API and Dashboard should be enabled.

      This will enable:
        - A REST API endpoint.
        - A web UI that can be used to dynamically read or modify the Traefik
          configuration.
        - A '/ping' endpoint for healthchecks.
        - A metrics endpoint for Prometheus to scrape.

      This BOSH Release only serves API and Dashboard on a TLS endpoint
      protected by a Digest Auth username and password.

      Please take care not exposing this endpoint to the entire Internet,
      otherwise your server could get compromized by malicious users.
    default: false
  traefik.api.tls.port:
    description: |
      TCP port for the Traefik API and Dashboard.
    default: 8443
  traefik.api.tls.cert:
    type: certificate
    description: |
      The TLS certificate to use for the API and Dashboard entrypoint.
  traefik.api.tls.min_version:
    description: |
      The minimum TLS version to be used by the API and Dashboard entrypoint.
    default: VersionTLS12
  traefik.api.digest_auth.realm:
    description: |
      Digest Auth realm to authenticate to when accessing the Traefik API and
      Dashboard.
    default: traefik
  traefik.api.digest_auth.username:
    description: |
      Digest Auth username to access the Traefik API and Dashboard.
  traefik.api.digest_auth.password:
    description: |
      Digest Auth password to access the Traefik API and Dashboard.


  traefik.rest.enabled:
    description: |
      Whether the REST provider is enabled or not.

      When enabled, the REST provider is served on the same entrypoint as the
      API. Then the Traefik API is no more read-only, and the configuration
      can be modified dynamically through the API.
    default: false


  traefik.web.enabled:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      Whether the 'web' backend should be enabled.

      This will enable a REST API endpoint and a web UI that can be used to
      dynamically read or modify the Traefik configuration. Please take great
      care not exposing this endpoint to the entire Internet, otherwise your
      server could get compromized by malicious users.
    default: false
  traefik.web.basic_auth.username:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      Basic Auth username to access the 'web' backend.
  traefik.web.basic_auth.password:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      Basic Auth password to access the 'web' backend.

      This value will end up being (kind of) MD5-digested (like 'htpasswd'
      does) before it is injected in Traefik config, so it will not appear in
      clear-text on the BOSH-managed Traefik nodes.
  traefik.web.readonly:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      Whether the 'web' endpoint should be readonly, in which case the Traefik
      configuration can only be read and not modified through this backend.
    default: true
  traefik.web.port:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      TCP port for the 'web' backend.

      We advise to set '8443' here when 'traefik.web.tls.enabled' is set to
      'true'.
    default: 8080
  traefik.web.tls.enabled:
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      Whether to activate TLS for the 'web' backend.
    default: false
  traefik.web.tls.cert:
    type: certificate
    description: |
      DEPRECATED. See 'traefik.api.*' properties instead.

      The TLS certificate to use for the 'web' backend.


  traefik.file.enabled:
    description: |
      Whether the 'file' backend should be enabled.
    default: false
  traefik.file.rules:
    description: |
      A verbatim of rules to use for the 'file' backend.

      See <https://docs.traefik.io/configuration/backends/file/> for more
      information on the TOML syntax used here.
    example: |
      [backends]
        [backends.backend1]
          [backends.backend1.circuitbreaker]
          expression = "NetworkErrorRatio() > 0.5"
          [backends.backend1.servers.server1]
          url = "http://172.17.0.2:80"
          weight = 10
          [backends.backend1.servers.server2]
          url = "http://172.17.0.3:80"
          weight = 1

        [backends.backend2]
          [backends.backend2.maxconn]
          amount = 10
          extractorfunc = "request.host"
          [backends.backend2.LoadBalancer]
          method = "drr"
          [backends.backend2.servers.server1]
          url = "http://172.17.0.4:80"
          weight = 1
          [backends.backend2.servers.server2]
          url = "http://172.17.0.5:80"
          weight = 2

      [frontends]
        [frontends.frontend1]
        backend = "backend2"
          [frontends.frontend1.routes.test_1]
          rule = "Host:test.localhost"

        [frontends.frontend2]
        backend = "backend1"
        passHostHeader = true
        priority = 10
        entrypoints = ["https"] # overrides defaultEntryPoints
          [frontends.frontend2.routes.test_1]
          rule = "Host:{subdomain:[a-z]+}.localhost"

        [frontends.frontend3]
        entrypoints = ["http", "https"] # overrides defaultEntryPoints
        backend = "backend2"
        rule = "Path:/test"
  traefik.file.watch:
    description: |
      Whether Traefik should watch the rules file for any dynamic change.
    default: false

  traefik.etcd.enabled:
    description: |
      Whether the 'etcd' backend should be enabled.
    default: false
  traefik.etcd.endpoint:
    description: |
      Etcd endpoint
    default: localhost:2379
  traefik.etcd.watch:
    description: |
      Etcd watch changes
    default: true
  traefik.etcd.prefix:
    description: |
      Etcd prefix
    default: "/traefik"
  traefik.etcd.credentials.username:
    description: |
      Etcd username
  traefik.etcd.credentials.password:
    description: |
      Etcd password
  traefik.etcd.tls.ca:
    description: |
      Etcd ca
  traefik.etcd.api_v3:
    discripion: |
      Use Etcd Api v3 not v2
    default: true
  traefik.etcd.tls.cert:
    description: |
      Etcd cert
  traefik.etcd.tls.key:
    description: |
      Etcd key
  traefik.etcd.tls.insecureSkipVerify:
    description: |
      Etcd insecureSkipVerify
